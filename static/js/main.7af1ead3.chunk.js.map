{"version":3,"sources":["services/UserService.js","components/main-components/LoginPage.js","components/sub-components/NewProjectModal.js","components/sub-components/UpcomingTasks.js","components/sub-components/RecentlyCompletedTasks.js","components/sub-components/ProjectCardsComponent.js","components/main-components/DashBoard.js","services/TagService.js","components/sub-components/ProjectTitleComponent.js","services/NoteService.js","components/sub-components/NotesCard.js","components/sub-components/SingleItem.js","components/sub-components/Checklist.js","components/sub-components/TaskModal.js","services/ChecklistService.js","services/ItemService.js","components/sub-components/AllTasks.js","components/sub-components/NewTaskModal.js","components/main-components/Projects.js","services/ProjectService.js","services/TaskService.js","components/main-components/MainViewRenderProps.js","App.js","serviceWorker.js","index.js"],"names":["UserService","component","createUser","user","setState","loading","state","fetch","workingURL","method","headers","Accept","body","JSON","stringify","then","response","json","data","undefined","errors","logErrors","localStorage","token","userId","user_id","loggedInUserId","loggedIn","catch","e","console","log","login","this","logUserIn","username","password","parent","handleTestLogin","LoginPage","useState","setUsername","setPassword","signup","setSignup","to","Container","className","Row","style","justifyContent","Col","sm","md","lg","Card","margin","padding","marginTop","Header","as","textAlign","Button","variant","onClick","backgroundColor","borderColor","length","Message","color","list","header","Form","Group","controlId","Label","Control","placeholder","value","onChange","target","type","size","handleClick","NewProjectModal","show","props","project","date","description","name","priority","handleName","handleDesc","handleChange","handleSelectChange","Modal","Title","Body","column","event","selected","Footer","handleModalClose","handleProjectSubmit","React","Component","UpcomingTasks","tasks","dateFromState","completeTask","upcomingTasks","filter","task","Date","deadline","setHours","valueOf","map","fontSize","marginLeft","ListGroup","Item","key","id","title","text","getSpanText","spanText","alignSelf","RecentlyCompletedTasks","todaysDate","setDate","getDate","completed_tasks","is_completed","sort","a","b","slice","width","maxWidth","idx","renderRow","row","index","ProjectCardsComponent","projects","openModal","textDecoration","fontWeight","pros","arrayOfArrays","i","push","prosInRows","renderRows","DashBoard","showNPM","allTasks","obj","newObj","authProps","projectService","postProject","taskId","taskService","inbox","trash","fluid","TagSerivce","productionURL","devURL","projectId","tags","ProjectTitleComponent","editing","isEditing","setName","desc","setDesc","updateProject","handleSubmit","NoteService","fetchNotesForProject","notes","createNote","note","deleteNote","noteId","deletedNote","NotesCard","noteService","openOrCloseModal","isModalHidden","renderForm","autoFocus","border","SingleItem","completeItem","itemId","itemService","item","checklistId","deleteItem","Checklist","renderItems","items","checklist","addItem","preventDefault","createNewItem","onSubmit","showItems","TaskModal","newList","checklistService","createChecklist","closeModal","checklists","ChecklistService","fetchChecklists","r","ItemService","newItem","oldChecklist","find","newChecklist","Object","assign","updateChecklistsWith","bool","editedItem","oldItem","AllTasks","nextProps","nextState","NewTaskModal","handleTitle","handleProjectSelect","newTask","toUTCString","handleTaskSubmit","renderSelect","defaultValue","Projects","showNTM","tagService","xs","float","completedTasks","ProjectService","fetchProjects","status","statusText","flat","reason","newProject","postTask","project_id","projectCopy","newProjects","updatedProject","proj","TaskService","fetchAllTasksFor","editedTask","MainViewRenderProps","findProjectWith","parseInt","children","App","logout","clear","showSideNavWithMain","location","history","exact","path","useParams","showDashboardLink","pathname","includes","Navbar","collapseOnSelect","Brand","href","Toggle","aria-controls","Collapse","Nav","Boolean","window","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7af1ead3.chunk.js","sourcesContent":["class UserService {\n  constructor(component) {\n    this.component = component\n    this.workingURL = 'https://arcane-sands-50858.herokuapp.com'\n    // this.workingURL = 'http://localhost:3000'\n  }\n\n\n  createUser = (user) => {\n    this.component.setState({loading: !this.component.state.loading})\n    fetch(`${this.workingURL}/users`, { //eslint-disable-line\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user: user\n      })\n    })\n    .then(response => response.json())\n    .then((data) => {\n      if(data.errors !== undefined && data.errors !== null) {\n        this.component.setState({\n          logErrors: data.errors\n        }, () => this.component.setState({loading: !this.component.state.loading}))\n      } else {\n        localStorage.token = data.token\n        localStorage.userId = data.user_id\n        this.component.setState({\n          token: data.token,\n          loggedInUserId: data.user_id,\n          loggedIn: data.token !== undefined && data.token !== \"\" && data.token !== null,\n          logErrors: []\n        }, () => this.component.setState({loading: !this.component.state.loading}))\n      }\n    })\n    .catch((e) => {\n      this.component.setState({loading: !this.component.state.loading})\n      console.log(e)\n    })\n  }\n\n  login = (user) => {\n    this.component.setState({loading: !this.component.state.loading})\n    fetch(`${this.workingURL}/login`, { //eslint-disable-line\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user: user\n      })\n    })\n      .then(response => response.json())\n      .then((data) => {\n        if(data.errors !== undefined && data.errors !== null) {\n          this.component.setState({\n            logErrors: data.errors\n          }, () => this.component.setState({loading: !this.component.state.loading}))\n        } else {\n          localStorage.token = data.token\n          localStorage.userId = data.user_id\n          this.component.setState({\n            token: data.token,\n            loggedInUserId: data.user_id,\n            loggedIn: data.token !== undefined && data.token !== \"\" && data.token !== null,\n            logErrors: []\n          }, () => this.component.setState({loading: !this.component.state.loading}))\n        }\n      })\n      .catch((e) => {\n        this.component.setState({loading: !this.component.state.loading})\n        console.log(e)\n      })\n  }\n}\nexport default UserService\n","import React, { useState } from \"react\";\nimport { Form, Container, Button, Card, Col, Row } from 'react-bootstrap'\nimport UserService from '../../services/UserService'\nimport { Redirect } from 'react-router-dom'\nimport { Header, Message } from 'semantic-ui-react'\n\nconst logUserIn = (username, password, parent) => {\n  const userService = new UserService(parent)\n  userService.login({ username, password })\n}\n\nconst handleClick = (signup, username, password, parent) => {\n  if (signup) {\n    const userService = new UserService(parent)\n    userService.createUser({ username, password })\n  } else {\n    logUserIn(username, password, parent)\n  }\n}\n\nconst handleTestLogin = (parent) => {\n  logUserIn('test_account1234', '123456', parent)\n}\n\nconst LoginPage = ({ parent, state }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [signup, setSignup] = useState(false)\n  // var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  const errors = state.logErrors\n  if(localStorage.token !== \"\" && localStorage.token !== undefined && localStorage.token !== \"undefined\"){\n    return <Redirect to=\"/\" />\n  } else {\n      return (\n        <Container className='d-flex justify-content-center flex-column h-100'>\n          <Row style={{justifyContent: 'center'}}>\n            <Col sm={4} md={6} lg={6}>\n              <Card style={{margin: 'auto', padding: '20px', marginTop: '50px'}}>\n                <Header as='h4' style={{textAlign: 'center', marginTop: 5}}>\n                  <Button variant='primary' onClick={handleTestLogin} style={{backgroundColor: '#db3d44', borderColor: '#db3d44'}}>Log in with a Test Account</Button>\n                </Header>\n              </Card>\n            </Col>\n          </Row>\n          <Row style={{justifyContent: 'center'}}>\n            <Col sm={4} md={6} lg={6}>\n              <Card style={{margin: 'auto', padding: '20px', marginTop: '30px'}}>\n                <Header as='h4' style={{textAlign: 'center', marginTop: 5}}>\n                  {signup ? 'Sign Up' : 'Sign In'} or <span onClick={() => setSignup(!signup)}><u>{!signup ? 'Sign Up!' : 'Sign In!'}</u></span>\n                </Header>\n                {errors.length !== 0 && !state.loading ? <Message color='red' list={errors} header='oops, something went wrong!'/> : null }\n                <span style={{textAlign: 'center'}}>{state.loading ? \"Loading...\": null}</span>\n                <div className='d-flex flex-row w-100 h-100  flex-fill justify-content-center '>\n                  <Form >\n                    <Form.Group controlId=\"formGroupEmail\">\n                      <Form.Label>Username</Form.Label>\n                      <Form.Control placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupPassword\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control type=\"Password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\n                    </Form.Group>\n                  </Form>\n                </div>\n                <div className=\"w-50 d-flex align-self-center justify-content-end\" >\n                  <Button size='sm' style={{backgroundColor: '#db3d44', borderColor: '#db3d44'}} onClick={e => handleClick(signup, username, password, parent)} variant=\"primary\">\n                    {!signup ? \"Sign in!\" : \"Create Account!\"}\n                  </Button>\n                </div>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      )\n    }\n}\n\nexport default LoginPage;\n","import React from 'react'\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\nimport DatePicker from \"react-datepicker\"\n\nimport \"react-datepicker/dist/react-datepicker.css\"\n\n\nexport default class NewProjectModal extends React.Component {\n  state = {\n    show: this.props.show,\n    project: {\n      date: \"\",\n      description: \"\",\n      name: \"\",\n      priority: \"\",\n    }\n  }\n\n  handleName = name => this.setState({ project: { ...this.state.project, name: name } })\n  handleDesc = description => this.setState({ project: { ...this.state.project, description: description } })\n  handleChange = date => this.setState({ project: { ...this.state.project, date: date } })\n  handleSelectChange = priority => this.setState({ project: { ...this.state.project, priority: priority } })\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Enter New Project Details</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group as={Row} controlId=\"formProName\">\n              <Form.Label column sm=\"2\">\n                <small>Name:</small>\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control onChange={(event) => this.handleName(event.target.value)} value={this.state.project.name} />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProDesc\">\n              <Form.Label column sm=\"2\">\n                <small>Description:</small>\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control onChange={(event) => this.handleDesc(event.target.value)} value={this.state.project.description} />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProPriority\">\n              <Col sm='2'>\n                <Form.Label><small>Priority:</small></Form.Label>\n              </Col>\n              <Col sm='10'>\n                <Form.Control as=\"select\" onChange={(event) => this.handleSelectChange(event.target.value)}>\n                  <option value='low'>Low</option>\n                  <option value='medium'>Medium</option>\n                  <option value='high'>High</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProDeadline\">\n              <Col sm='2'>\n                <Form.Label>\n                  <small>Deadline:</small>\n                </Form.Label>\n              </Col>\n              <Col sm='10'>\n                <DatePicker\n                  selected={this.state.project.date}\n                  onChange={this.handleChange}\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button size='sm' variant=\"secondary\" onClick={this.props.handleModalClose}>Close</Button>\n          <Button size='sm' onClick={(event) => this.props.handleProjectSubmit(this.state.project)} variant=\"primary\">Create Project</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n","import React from 'react'\nimport { Card, ListGroup } from 'react-bootstrap'\n\nconst getSpanText = (text, completeTask, task) => {\n  if (text === 'Due Today') {\n    return <span className='flex-fill text-right'>{text}<i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: '#d3d3d3', marginLeft: 3 }} /></span>\n  }\n  return <span className='flex-fill text-right'><i style={{ color: \"red\" }}>{text}</i><i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: '#d3d3d3', marginLeft: 3 }} /></span>\n}\n\nconst UpcomingTasks = ({ tasks, dateFromState, completeTask }) => {\n  // console.log(dateFromState)\n  // console.log(tasks)\n  let upcomingTasks = tasks.filter(task => new Date(task.deadline).setHours(0, 0, 0, 0).valueOf() <= dateFromState.setHours(0, 0, 0, 0).valueOf())\n  upcomingTasks = upcomingTasks.map(task => {\n    task['spanText'] = new Date(task.deadline).setHours(0, 0, 0, 0).valueOf() === dateFromState.setHours(0, 0, 0, 0).valueOf() ? 'Due Today' : 'Past Due'\n    return task\n  })\n  return (\n    <div>\n      <Card>\n        <Card.Header style={{ backgroundColor: '#0033CC', color: \"#fff\" }}>\n          Upcoming Tasks <i className=\"fa fa-fw fa-caret-up\" style={{ fontSize: '1em', marginLeft: 5 }} />\n        </Card.Header>\n        {upcomingTasks.map(task => {\n          return (\n            <ListGroup.Item className='d-flex' key={`list-group-item-${task.id}`}>\n              {task.title}\n              {getSpanText(task.spanText, completeTask, task)}\n            </ListGroup.Item>)\n        }\n        )}\n        {upcomingTasks.length === 0 ? <h5 style={{marginTop: 5, alignSelf: 'center'}}>No Upcoming Task!</h5> : console.log(upcomingTasks) }\n      </Card>\n    </div>\n  )\n}\n\nexport default UpcomingTasks\n","import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap'\n\nconst RecentlyCompletedTasks = ({ tasks, completeTask }) => {\n  let todaysDate = new Date()\n  todaysDate.setDate(todaysDate.getDate() - 7)\n  const completed_tasks = tasks.filter(task => task.is_completed && new Date(task.deadline).valueOf() > todaysDate.setHours(0, 0, 0, 0).valueOf()).sort((a, b) => b.id - a.id).slice(0,5)\n  return (\n    <Card style={{ width: '350px', maxWidth: '100%' }}>\n      <Card.Header style={{ backgroundColor: '#669900', color: \"#fff\" }}>\n        Recently Completed Tasks <i className=\"fa fa-fw fa-check-square-o\" style={{ fontSize: '1em', marginLeft: 5 }} />\n      </Card.Header>\n      {\n        completed_tasks.map((task, idx) =>{\n          return <ListGroup.Item key={`task-item-${task.id}`}>\n              <div className='float-left'>\n                {task.title}\n              </div>\n              <div className='float-right'>\n                <i className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: 'green'}} />\n              </div>\n          </ListGroup.Item>\n        })\n      }\n      {completed_tasks.length === 0 ? <h5 style={{marginTop: 5, alignSelf: 'center'}}>No Completed Task!</h5> : console.log() }\n    </Card>\n  );\n}\n\nexport default RecentlyCompletedTasks;\n","import React from 'react'\nimport { Card, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst prosInRows = (pros) => {\n  const size = 3\n  const arrayOfArrays = []\n  for (var i = 0; i < pros.length; i += size) {\n    arrayOfArrays.push(pros.slice(i, i + size))\n  }\n  return arrayOfArrays\n}\n\nconst renderRows = (projects) => {\n  return prosInRows(projects).map((row, index) => renderRow(row, index))\n}\n\nconst renderRow = (row, index) => (\n  <div className='row mx-auto' key={`row-${index}`} style={{ marginTop: 10 }}>\n    {row.map(project =>\n      <Col key={`project-${project.id}`} sm={4}>\n        <Link to={`/projects/${project.id}`}>\n          <Card key={`project-${project.id}`}>\n            <Card.Header style={{color: '#000000'}}>\n              {project.name}\n            </Card.Header>\n          </Card>\n        </Link>\n      </Col>\n    )}\n  </div>\n)\n\nconst ProjectCardsComponent = ({ projects, openModal }) => {\n  return (\n    <Card className='mb-3'>\n      <Card.Header style={{ backgroundColor: '#0099FF', color: \"#fff\" }}>\n        <div className='float-left'>\n          My Projects <i className=\"fa fa-fw fa-th-large\" style={{ fontSize: '1em', marginLeft: 5 }} />\n        </div>\n        <div className='float-right' onClick={() => openModal()}>\n          <strong>New</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n        </div>\n      </Card.Header>\n      <Card.Body>\n        {projects.length === 0 ? <span>You don't have any project, please create one by clicking <span style={{textDecoration: 'underline', fontWeight: 'bold'}} onClick={() => openModal()}>here!</span></span> : renderRows(projects)}\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default ProjectCardsComponent\n","import React from 'react'\nimport Calendar from 'react-calendar'\nimport NewProjectModal from '../sub-components/NewProjectModal.js'\nimport UpcomingTasks from '../sub-components/UpcomingTasks.js'\nimport RecentlyCompletedTasks from '../sub-components/RecentlyCompletedTasks.js'\nimport ProjectCardsComponent from '../sub-components/ProjectCardsComponent'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nexport default class DashBoard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: 1,\n      showNPM: false,\n      date: new Date(),\n      inbox: [],\n      trash: [],\n      upcomingTasks: []\n    }\n  }\n\n  onChange = date => this.setState({ date })\n  openModal = () => this.setState({ showNPM: true })\n  handleModalClose = () => this.setState({ showNPM: false })\n  allTasks = () => this.props.allTasks\n\n  handleProjectSubmit = (obj) => {\n    let newObj = { ...obj, userId: this.props.authProps.loggedInUserId }\n    this.props.projectService.postProject(newObj)\n    this.setState({ showNPM: false })\n  }\n\n  completeTask = (taskId) => this.props.taskService.completeTask(taskId)\n\n  render() {\n    return (\n      <Container fluid>\n        <NewProjectModal handleProjectSubmit={this.handleProjectSubmit} show={this.state.showNPM} handleModalClose={this.handleModalClose} />\n        <Row>\n          <Col sm={3}>\n            <Calendar className='mb-3' onChange={this.onChange} value={this.state.date} />\n          </Col>\n          <Col sm={6}>\n            <ProjectCardsComponent projects={this.props.projects} openModal={this.openModal} />\n            <UpcomingTasks dateFromState={this.state.date} tasks={this.allTasks().filter(task => !task.is_completed)} completeTask={this.completeTask} />\n          </Col>\n          <Col sm={3}>\n            <RecentlyCompletedTasks tasks={this.allTasks()} completeTask={this.completeTask} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\n// <Accordion defaultActiveKey=\"0\">\n//   <Card style={{ width: '100%', maxWidth: '100%' }}>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Inbox <i className=\"fa fa-fw fa-inbox\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Inbox !</ListGroup.Item>\n//     <Card.Header style={{ backgroundColor: '#666666', color: '#fff' }}>\n//       <CustomToggle eventkey=\"1\" color='#666666'>\n//         Trash <i className=\"fa fa-fw fa-trash\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//       </CustomToggle>\n//     </Card.Header>\n//     <Accordion.Collapse eventkey=\"1\">\n//       <ListGroup.Item>Trash HERE!</ListGroup.Item>\n//     </Accordion.Collapse>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Upcoming Deadlines <i className=\"fa fa-fw fa-hourglass-end\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Deadlines 1</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 2</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 3</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 4</ListGroup.Item>\n//   </Card>\n// </Accordion>\n","export default class TagSerivce {\n  constructor(component) {\n    this.component = component\n    this.productionURL = 'https://arcane-sands-50858.herokuapp.com'\n    this.devURL = 'http://localhost:3000'\n  }\n\n  fetchAll(projectId) {\n    fetch(`${this.productionURL}/tags`)\n      .then(response => response.json())\n      .then(tags => this.component.setState({ tags }))\n  }\n}","import React, { useState } from 'react'\nimport { Card, Row, Col, Form } from 'react-bootstrap/'\n\nconst handleSubmit = (isEditing, name, description, projectService, project) => {\n  projectService.updateProject(project.id, { name, description })\n  isEditing(false)\n}\n\nconst ProjectTitleComponent = ({ project, className, projectService }) => {\n  const [editing, isEditing] = useState(false)\n  const [name, setName] = useState(project.name)\n  const [desc, setDesc] = useState(project.desc)\n  return (\n    <Card className={className + ' d-flex'}>\n      <Card.Header style={{ backgroundColor: '#0099FF', color: \"#fff\" }}>\n        <Row>\n          <Col sm={10} className='my-auto' >\n            {editing ? <Form.Control value={name} placeholder={project.name} onChange={(e) => setName(e.target.value)} /> : project.name /* {project.name}<i className=\"fa fa-fw fa-square\" style={{ fontSize: '1em', marginLeft: 5 }} /> */}\n          </Col>\n          <Col sm={2} className='text-right'>\n            <div variant='light' onClick={() => !editing ? isEditing(true) : handleSubmit(isEditing, name, desc, projectService, project)}>\n              <strong>{editing ? 'Done' : 'Edit'}</strong><i className={!editing ? \"fa fa-fw fa-pencil\" : \"fa fa-fw fa-check\"} style={{ fontSize: '1em', marginLeft: 5 }} />\n            </div>\n          </Col>\n        </Row>\n\n      </Card.Header>\n      <Card.Body>\n        {editing ? <Form.Control value={desc} placeholder={project.description} onChange={(e) => setDesc(e.target.value)} /> : project.description}\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default ProjectTitleComponent\n","class NoteService {\n  constructor(component) {\n    this.component = component\n    this.workingURL = 'https://arcane-sands-50858.herokuapp.com'\n    // this.workingURL = 'http://localhost:3000'\n\n  }\n\n  fetchNotesForProject = (projectId) => {\n    fetch(`${this.workingURL}/projects/${projectId}/notes`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token\n      }\n    })\n      .then(response => response.json())\n      .then(notes => this.component.setState({ notes }))\n  }\n\n  createNote = (note, projectId) => {\n    fetch(`${this.workingURL}/projects/${projectId}/notes`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify(note),\n      method: 'POST'\n    })\n      .then(response => response.json())\n      .then(note => {\n        this.component.setState({\n          notes: [...this.component.state.notes, note]\n        })\n      })\n  }\n\n  deleteNote = (noteId) => {\n    fetch(`${this.workingURL}/notes/${noteId}`, { //eslint-disable-line \n      method: 'DELETE',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n    })\n      .then(response => response.json())\n      .then(deletedNote => {\n        const notes = this.component.state.notes\n        this.component.setState({\n          notes: notes.filter(note => note.id !== deletedNote.id)\n        })\n      })\n  }\n}\n\nexport default NoteService\n","import React, { Component } from 'react'\nimport { Card, ListGroup } from 'react-bootstrap/'\nimport NoteService from '../../services/NoteService';\nimport { Button, Form, Col, Row } from 'react-bootstrap'\n\nclass NotesCard extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isModalHidden: false,\n      notes: [],\n      text: ''\n    }\n    this.noteService = new NoteService(this)\n  }\n\n  handleSubmit = (note) => {\n    this.noteService.createNote(note, this.props.project.id)\n    this.openOrCloseModal()\n  }\n\n  openOrCloseModal = () => this.setState({ isModalHidden: !this.state.isModalHidden })\n\n  componentDidMount() {\n    this.noteService.fetchNotesForProject(this.props.project.id)\n  }\n\n  renderForm = () => (\n    <Form>\n      <Form.Group as={Row} controlId=\"formProName\" className='text-center'>\n        <Col sm=\"9\">\n          <Form.Control as=\"textarea\" autoFocus={true} onChange={(event) => this.setState({ text: event.target.value })} placeholder=\"Enter text here...\" value={this.state.text} />\n        </Col>\n        <Col sm=\"3\" className='my-auto'>\n          <Button onClick={(event) => this.handleSubmit({ note: { text: this.state.text } })} variant=\"primary\">\n            Add Note\n          </Button>\n        </Col>\n      </Form.Group>\n    </Form>\n  )\n\n  render() {\n    const { className } = this.props\n    return (\n      <Card className={className}>\n        {/* <NotesModal show={this.state.isModalHidden} closeModal={this.openOrCloseModal} handleSubmit={this.handleSubmit} /> */}\n        <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n          Notes <i className=\"fa fa-fw fa-pencil-square-o\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          <div className=\"float-right\" onClick={this.openOrCloseModal}>\n            <strong>{!this.state.isModalHidden ? \"New\" : \"Cancel\"}</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          </div>\n        </Card.Header>\n        <Card.Body>\n          {this.state.isModalHidden ? this.renderForm() : null}\n          {this.state.notes.map(note => (\n            <ListGroup.Item className='d-flex' key={`note-item-${note.id}`} style={{ border: '1px solid #d3d3d3' }}>\n              {note.text}\n              <span className='flex-fill text-right'>\n                <i className=\"fa fa-fw fa-trash\" style={{ fontSize: \"1.25em\", color: \"darkgray\" }} onClick={() => this.noteService.deleteNote(note.id)}></i>\n              </span>\n            </ListGroup.Item>\n          ))}\n        </Card.Body>\n      </Card>\n    )\n  }\n\n}\n\nexport default NotesCard\n","import React from 'react'\nimport { Card, ListGroup } from 'react-bootstrap'\n\nexport default class SingleItem extends React.Component {\n  // constructor(props) {\n  //   super();\n  //   // this.state = {\n  //   //   isCompleted: props.is_completed\n  //   // }\n  //   // this.itemService = new ItemService(this)\n  // }\n\n  completeItem = (itemId) => {\n    this.props.itemService.completeItem(itemId, !this.props.item.is_completed, this.props.checklistId)\n  }\n\n  render() {\n    return (\n      <div>\n        <Card.Body key={`checklist-item${this.props.item.id}`}>\n          <ListGroup.Item key={this.props.item.id}>\n            <div className='float-left'>\n              <i onClick={() => this.completeItem(this.props.item.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: !this.props.item.is_completed ? 'silver' : 'green' }} />\n\n              {this.props.item.text}\n            </div>\n            <div className='float-right'>\n              <i className=\"fa fa-fw fa-trash\" style={{ fontSize: '1.25em', color: 'darkGray' }} onClick={() => this.props.deleteItem(this.props.item.id)} />\n            </div>\n            <br />\n          </ListGroup.Item>\n        </Card.Body>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport SingleItem from './SingleItem.js'\nimport { Form, Row, Col, Button } from 'react-bootstrap'\n\nexport default class Checklist extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showItems: false,\n      addItem: false,\n      text: ''\n    }\n  }\n\n  renderItems = () => {\n    const items = [...this.props.checklist.items]\n    items.sort((a, b) => a.id - b.id)\n    return items.map(item => <SingleItem checklistId={this.props.checklist.id} itemService={this.props.itemService} authProps={this.props.authProps} key={item.id} item={item} deleteItem={this.deleteItem} />)\n  }\n  handleChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  handleClick = () => this.setState({ addItem: !this.state.addItem })\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.itemService.createNewItem(this.props.checklist.id, { text: this.state.text })\n    this.setState({ addItem: false, text: '' })\n  }\n\n  deleteItem = (itemId) => {\n    this.props.itemService.deleteItem(itemId, this.props.checklist.id)\n  }\n\n  renderForm = () => {\n    const { title } = this.state\n    return (\n      <Form className='pt-1 pb-1 pl-2' onSubmit={this.handleSubmit}>\n        <Row>\n          <Col sm='7'>\n            <Form.Control placeholder='text' name='text' value={title} onChange={this.handleChange} />\n          </Col>\n          <Col sm='2'>\n            <Button onClick={this.handleSubmit} >\n              Submit\n            </Button>\n          </Col>\n          <Col sm='2'>\n            <Button variant=\"danger\" onClick={() => this.setState({ addItem: false, text: '' })}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n\n  render() {\n    return (\n      <div key={this.props.checklist.id} className='mb-3'>\n        <Card>\n          <Card.Header >\n            <Row>\n              <Col sm={8}>\n                {this.props.checklist.title}\n              </Col>\n              <Col sm={2}>\n                <Button size=\"sm\" onClick={() => this.setState({ showItems: !this.state.showItems })}>Expand</Button>\n\n              </Col>\n              <Col sm={2} className='my-auto pt-1'>\n                <i onClick={event => this.handleClick()} className=\"fa fa-fw fa-plus-square align-self-center\" style={{ fontSize: '1.5em', marginLeft: 5 }} />\n              </Col>\n            </Row>\n\n          </Card.Header>\n          {this.state.addItem ? this.renderForm() : null}\n          {this.state.showItems ? this.renderItems() : null}\n        </Card>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Modal, Form, Row, Col, Button } from 'react-bootstrap'\nimport Checklist from './Checklist.js'\n\nexport default class TaskModal extends React.Component {\n  state = {\n    newList: false,\n    title: ''\n  }\n  handleChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  handleClick = () => this.setState({ newList: !this.state.newList })\n\n  handleSubmit = (event) => {\n    this.props.checklistService.createChecklist(this.props.task.id, { title: this.state.title })\n    this.setState({ title: '', newList: false })\n  }\n\n  renderForm = () => {\n    const { title } = this.state\n    return (\n      <Form className='pt-1 pb-4 pl-2'>\n        <Row>\n          <Col sm='7'>\n            <Form.Control placeholder='title' name='title' value={title} onChange={this.handleChange} />\n          </Col>\n          <Col sm='2'>\n            <Button onClick={this.handleSubmit} >\n              Submit\n            </Button>\n          </Col>\n          <Col sm='2'>\n            <Button variant=\"danger\" onClick={() => this.setState({ newList: false })}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <div className='float-left' style={{ color: \"black\" }}>\n            {this.props.task.title}\n          </div>\n          <div className='float-right'>\n            <i onClick={event => this.handleClick()} className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1.5em', marginLeft: 5 }} />\n            <i onClick={() => this.props.closeModal()} className=\"fa fa-fw fa-times-circle\" style={{ fontSize: '1.5em' }} />\n          </div>\n        </Modal.Header>\n        <Modal.Body>\n          {this.state.newList ? this.renderForm() : null}\n          {this.props.checklists.map(checklist => <Checklist authProps={this.props.authProps} itemService={this.props.itemService} checklist={checklist} key={checklist.id} />)}\n        </Modal.Body>\n      </Modal>\n    )\n  }\n}\n","export default class ChecklistService {\n  constructor(component) {\n    this.component = component\n  }\n\n  fetchChecklists = taskId => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/tasks/${taskId}/checklists`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token\n      }\n    })\n      .then(r => r.json())\n      .then(checklists => {\n        this.component.setState({ checklists })\n      })\n  }\n\n  createChecklist = (taskId, checklist) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/tasks/${taskId}/checklists`, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        checklist\n      })\n    })\n      .then(response => response.json())\n      .then(checklist => {\n        this.component.setState({\n          checklists: [...this.component.state.checklists, checklist]\n        })\n      })\n  }\n\n}\n","export default class ItemService {\n  constructor(component) {\n    this.component = component\n  }\n\n  createNewItem = (checklistId, item) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/checklists/${checklistId}/items`, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        item\n      })\n    })\n      .then(response => response.json())\n      .then(newItem => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = [...newChecklist.items, newItem]\n        this.component.updateChecklistsWith(newChecklist)\n      })\n  }\n\n  completeItem = (itemId, bool, checklistId) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/items/${itemId}`, {\n      method: 'PATCH',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify({\n        item: {\n          is_completed: bool\n        }\n      })\n    })\n      .then(r => r.json())\n      .then(editedItem => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = newChecklist.items.map(item => editedItem.id === item.id ? editedItem : item)\n        this.component.updateChecklistsWith(newChecklist)\n      })\n  }\n\n  deleteItem = (itemId, checklistId) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/items/${itemId}`, {\n      method: 'DELETE',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(r => r.json())\n      .then(item => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = newChecklist.items.filter(oldItem => oldItem.id !== item.id)\n        this.component.setState({\n          checklists: this.component.state.checklists.map(list => list.id === newChecklist.id ? newChecklist : list)\n        })\n      })\n  }\n\n}\n","import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap'\nimport TaskModal from './TaskModal.js'\nimport ChecklistService from '../../services/ChecklistService.js'\nimport ItemService from '../../services/ItemService.js';\n\n\nclass AllTasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalHidden: true,\n      task: { id: 1 },\n      checklists: [],\n    }\n    this.ChecklistService = new ChecklistService(this)\n    this.itemService = new ItemService(this)\n  }\n\n  closeModal = () => this.setState({ isModalHidden: true })\n\n  updateChecklistsWith = (checklist) => {\n    this.setState({\n      checklists: this.state.checklists.map(list => list.id === checklist.id ? checklist : list)\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState !== this.state) return true\n    return false\n  }\n\n  openModal = (task) => {\n    this.ChecklistService.fetchChecklists(task.id)\n    this.setState({ isModalHidden: false, task: task })\n  }\n\n  render() {\n    const { title, tasks, openModal, style, completeTask } = this.props\n    return (\n      <Card className='mb-2' >\n        <TaskModal itemService={this.itemService} checklistService={this.ChecklistService} authProps={this.props.authProps} task={this.state.task} show={!this.state.isModalHidden} checklists={this.state.checklists} closeModal={this.closeModal} />\n        <Card.Header style={style}>\n          <div className=\"float-left\">\n            {title} <i className=\"fa fa-fw fa-th\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          </div>\n          {title !== \"Completed Tasks\" ?\n            <div className=\"float-right\" onClick={openModal}>\n              <strong>New</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n            </div>\n            : null\n          }\n        </Card.Header>\n        <Card.Body>\n          {\n            tasks.map(task =>\n              <div key={`task-item${task.id}`}>\n                <ListGroup.Item key={`task-item-${task.id}`} className='d-flex' >\n                  <span className='flex-grow-1' onClick={() => this.openModal(task)}>\n                    {task.title}\n                  </span>\n                  <span>\n                    {title === \"Upcoming Tasks\" ? <i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: '#d3d3d3', marginLeft: 3 }} /> : null}\n                    {/* {title === \"All Tasks\" ? <i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: `${task.is_completed ? 'green' : '#d3d3d3'}`, marginLeft: 3 }} /> : null} */}\n\n                  </span>\n                </ListGroup.Item>\n              </div>\n            )\n          }\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nexport default AllTasks;\n\n// style={{ width: '850px' }}\n","import React from 'react'\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\nimport DatePicker from \"react-datepicker\"\n\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nexport default class NewTaskModal extends React.Component {\n  state = {\n    date: new Date(),\n    task: {\n      deadline: \"\",\n      title: \"\",\n      projectId: this.props.project ? this.props.project.id : 1,\n    }\n  }\n\n  handleTitle = name => this.setState({ task: { ...this.state.task, title: name } })\n  handleProjectSelect = projectId => this.setState({ task: { ...this.state.task, projectId: projectId } })\n  handleChange = date => {\n    this.setState({ date: date })\n  }\n  handleSelectChange = priority => this.setState({ task: { ...this.state.task, priority: priority } })\n  handleSubmit = () => {\n    const newTask = { ...this.state.task }\n    newTask.deadline = this.state.date.toUTCString()\n    this.props.handleTaskSubmit(newTask)\n    this.setState({\n      task: {\n        deadline: \"\",\n        title: \"\",\n        projectId: this.props.project ? this.props.project.id : 1,\n      }\n    }, () => this.props.closeModal())\n  }\n  renderSelect = () => (\n    <Form.Control as=\"select\" onChange={(event) => this.handleProjectSelect(event.target.value)} defaultValue={this.state.task.projectId}>\n      {this.props.projects.map(project => <option key={project.id} value={project.id}>{project.name}</option>)}\n    </Form.Control>\n  )\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>New Task Form</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group as={Row} controlId=\"formProName\">\n              <Form.Label column sm=\"2\">\n                <small>Title:</small>\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control onChange={(event) => this.handleTitle(event.target.value)} defaultValue={this.state.task.title} />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProDesc\">\n              <Form.Label column sm=\"2\">\n                <small>Description:</small>\n              </Form.Label>\n              <Col sm=\"10\">\n                {this.props.projects ? this.renderSelect() : this.props.project.name}\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProDeadline\">\n              <Col sm='2'>\n                <Form.Label>\n                  <small>Deadline:</small>\n                </Form.Label>\n              </Col>\n              <Col sm='10'>\n                <DatePicker\n                  selected={this.state.date}\n                  onChange={this.handleChange}\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button size='sm' variant=\"secondary\" onClick={this.props.closeModal}>Close</Button>\n          <Button size='sm' onClick={(event) => this.handleSubmit()} variant=\"primary\">Create New Task</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n","import React from 'react'\nimport { Container, Col, Row, Card, Button } from 'react-bootstrap/'\nimport { Link } from 'react-router-dom'\nimport { Header } from 'semantic-ui-react'\nimport TagSerivce from '../../services/TagService'\nimport ProjectTitleComponent from '../sub-components/ProjectTitleComponent'\nimport NotesCard from '../sub-components/NotesCard'\nimport AllTasks from '../sub-components/AllTasks'\nimport NewTaskModal from '../sub-components/NewTaskModal'\nimport NewProjectModal from '../sub-components/NewProjectModal'\n\nexport default class Projects extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      tags: [],\n      showNTM: false,\n      showNPM: false,\n    }\n    this.tagService = new TagSerivce(this)\n  }\n\n  openOrCloseModal = () => this.setState({ showNTM: !this.state.showNTM })\n\n  completeTask = (taskId) => {\n    this.props.taskService.completeTask(taskId)\n  }\n\n  handleProjectSubmit = (obj) => {\n    let newObj = { ...obj, userId: this.props.authProps.loggedInUserId }\n    this.props.projectService.postProject(newObj)\n    this.setState({ showNPM: false })\n  }\n\n  handleModalClose = () => this.setState({ showNPM: false })\n\n  componentDidMount() {\n    // this.props.project === undefined ? this.setState({showNPM: true}) : this.setState({showNPM: false})\n  }\n\n  render() {\n    const { project } = this.props\n    if(project === undefined || project === null || project === 'undefined') {\n     // show new project modal\n     return (\n      <Container fluid>\n          <NewProjectModal handleProjectSubmit={this.handleProjectSubmit} show={this.state.showNPM} handleModalClose={this.handleModalClose} />\n          <Row style={{justifyContent: 'center'}}>\n            <Col sm={6} md={6} lg={6}>\n              <Card style={{margin: 'auto', padding: '20px', marginTop: '50px'}}>\n                <Header as='h4' style={{textAlign: 'center', marginTop: 5}}>\n                  You need to create a project in order to view this page.\n                </Header>\n                <Card.Footer>\n                  <Row>\n                    <Col xs={6} sm={6} md={6} lg={6}>\n                      <Link to=\"/\"><Button size=\"sm\" variant='secondary'>Back to Dashboard</Button></Link>\n                    </Col>\n                    <Col xs={6} sm={6} md={6} lg={6}>\n                      <Button size=\"sm\" variant='primary' style={{float: 'right', backgroundColor: '#db3d44', borderColor: '#db3d44', marginLeft: '5px'}}>Create a Project!</Button>\n                    </Col>\n                  </Row>\n                </Card.Footer>\n              </Card>\n            </Col>\n          </Row>\n      </Container>\n     )\n    } else {\n      const tasks = project.tasks.filter(task => !task.is_completed)\n      const completedTasks = project.tasks.filter(task => task.is_completed)\n      return (\n        <Container fluid>\n          <NewTaskModal show={this.state.showNTM} closeModal={this.openOrCloseModal} project={this.props.project} handleTaskSubmit={this.props.handleTaskSubmit} />\n          <Row className='w-100'>\n            <Col sm={7}>\n              <ProjectTitleComponent projectService={this.props.projectService} project={project} className='mb-3' />\n              <NotesCard authProps={this.props.authProps} className='mb-3' project={project} openModal={this.openOrCloseModal} />\n            </Col>\n            <Col sm={5}>\n              {/* need to send in checklist service and item service from app.js  */}\n              <AllTasks key={`length-of-tasks-${tasks.length}`} completeTask={this.completeTask} authProps={this.props.authProps} title='Upcoming Tasks' tasks={tasks} style={{ backgroundColor: '#4d1411', color: \"#fff\" }} openModal={this.openOrCloseModal} />\n              <AllTasks key={`length-of-completedTasks-${completedTasks.length}`} authProps={this.props.authProps} title='Completed Tasks' tasks={completedTasks} style={{ backgroundColor: '#669900', color: \"#fff\" }} />\n            </Col>\n          </Row>\n        </Container>\n      )\n    }\n  }\n}\n","export default class ProjectService {\n  constructor(component) {\n    this.component = component\n    this.productionURL = 'https://arcane-sands-50858.herokuapp.com'\n    this.devURL = 'http://localhost:3000'\n  }\n\n  fetchProjects = (userId) => {\n    fetch(`${this.productionURL}/users/${userId}/projects`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token\n      }\n    }).then(response => {\n      if (response.status > 199 && response.status < 300) return response.json()\n      throw response.statusText\n    }).then(projects => {\n      const allTasks = projects.map(project => project.tasks).flat()\n      this.component.setState({ projects, allTasks })\n    }).catch(reason => console.log(reason))\n  }\n\n  postProject = (project) => {\n    fetch(`${this.productionURL}/users/${project.userId}/projects`, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify(project)\n    })\n      .then(r => r.json())\n      .then(newProject => this.component.setState({ projects: [...this.component.state.projects, newProject] }))\n  }\n\n  postTask = (task) => {\n    fetch(`${this.productionURL}/projects/${task.projectId}/tasks`, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify(task)\n    })\n      .then(r => r.json())\n      .then(newTask => {\n        const project = this.component.state.projects.find(project => project.id === newTask.project_id)\n        const projectCopy = Object.assign({}, project)\n        projectCopy.tasks = [...projectCopy.tasks, newTask]\n        const newProjects = this.component.state.projects.map(project => project.id === projectCopy.id ? projectCopy : project)\n        this.component.setState({\n          projects: newProjects,\n          allTasks: newProjects.map(project => project.tasks).flat(),\n        })\n      })\n  }\n\n  updateProject = (id, project) => {\n    fetch(`${this.productionURL}/projects/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify({ project })\n    })\n      .then(r => r.json())\n      .then(updatedProject =>\n        this.component.setState({\n          projects: this.component.state.projects.map(proj => proj.id === updatedProject.id ? updatedProject : proj)\n        }))\n  }\n}\n","class TaskService {\n  constructor(component) {\n    this.component = component\n    this.workingURL = 'https://arcane-sands-50858.herokuapp.com'\n    // this.workingURL = 'http://localhost:3000'\n  }\n\n  fetchAllTasksFor = (projectId) => {\n    fetch(`${this.workingURL}/projects/${projectId}/tasks`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token\n      }\n    })\n      .then(response => response.json())\n      .then(tasks => this.component.setState({ tasks }))\n  }\n\n  completeTask = (taskId) => {\n    fetch(`${this.workingURL}/tasks/${taskId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify({\n        task: {\n          is_completed: true\n        }\n      })\n    })\n      .then(r => r.json())\n      .then(editedTask => {\n        const project = this.component.state.projects.find(project => project.id === editedTask.project_id)\n        const projectCopy = Object.assign({}, project)\n        projectCopy.tasks = projectCopy.tasks.map(task => task.id === editedTask.id ? editedTask : task)\n        const newProjects = this.component.state.projects.map(project => project.id === projectCopy.id ? projectCopy : project)\n        this.component.setState({\n          projects: newProjects,\n          allTasks: newProjects.map(project => project.tasks).flat()\n        })\n      })\n  }\n}\n\nexport default TaskService\n","import React, { Component } from 'react';\nimport ProjectService from '../../services/ProjectService.js'\nimport TaskService from '../../services/TaskService.js'\nimport DashBoard from './DashBoard'\nimport Projects from './Projects'\n\nexport class MainViewRenderProps extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      token: null,\n      loggedInUserId: null,\n      projects: [],\n      allTasks: [],\n    }\n    this.projectService = new ProjectService(this)\n    this.taskService = new TaskService(this)\n  }\n\n  componentDidMount() {\n    this.projectService.fetchProjects(this.props.authProps.loggedInUserId)\n  }\n\n  findProjectWith = (id) => this.state.projects.find(project => project.id === parseInt(id))\n\n  handleTaskSubmit = obj => this.projectService.postTask(obj)\n\n  render() {\n    switch (this.props.children) {\n      case DashBoard:\n        return <this.props.children allTasks={this.state.allTasks} projects={this.state.projects} projectService={this.projectService} taskService={this.taskService} authProps={this.props.authProps} />\n      case Projects:\n        return <this.props.children projectService={this.projectService} taskService={this.taskService} project={this.findProjectWith(this.props.id)} authProps={this.props.authProps} handleTaskSubmit={this.handleTaskSubmit} />\n      default:\n        return <this.props.children tasks={this.state.allTasks} taskService={this.taskService} projects={this.state.projects} handleTaskSubmit={this.handleTaskSubmit} authProps={this.props.authProps} />\n    }\n  }\n}\n\nexport default MainViewRenderProps;\n\n{/* <DashBoard projectService={this.projectService} taskService={this.taskService} projects={this.state.projects} authProps={this.authProps()} /> */ } //eslint-disable-line\n{/* <Projects project={this.findProjectWith(useParams().id)} handleTaskSubmit={this.handleTaskSubmit} authProps={this.authProps()} /> */ } //eslint-disable-line\n{/* <Tasks tasks={this.state.allTasks} projects={this.state.projects} handleTaskSubmit={this.handleTaskSubmit} authProps={this.authProps()} /> */ } //eslint-disable-line","import React, { Component } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport LoginPage from './components/main-components/LoginPage';\nimport DashBoard from './components/main-components/DashBoard.js'\nimport Projects from './components/main-components/Projects.js'\nimport { Route, Link, useParams, Switch } from 'react-router-dom'\nimport { MainViewRenderProps } from './components/main-components/MainViewRenderProps.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      token: null,\n      loggedInUserId: null,\n      logErrors: [],\n      loading: false,\n      projects: []\n    }\n  }\n\n  authProps = () => ({ token: this.state.token, loggedInUserId: this.state.loggedInUserId })\n\n  componentDidMount() {\n    if(localStorage.token !== null && localStorage.token !== \"\" && localStorage.token !== undefined && localStorage.token !== \"undefined\") {\n      this.setState({\n        token: localStorage.token,\n        loggedInUserId: localStorage.userId\n      })\n    }\n  }\n\n  logout = () => {\n    localStorage.clear()\n    this.setState({\n      token: null,\n      loggedInUserId: null\n    })\n  }\n\n  // fetchForFirstProjectId = () => {\n  //     fetch(`https://arcane-sands-50858.herokuapp.com/users/${this.state.loggedInUserId}/projects`, {\n  //       headers: {\n  //         \"Authorization\": this.state.token\n  //       }\n  //     }).then(response => {\n  //       if (response.status > 199 && response.status < 300) return response.json()\n  //       throw response.statusText\n  //     }).then(projects => {\n  //       this.setState({ projects })\n  //     }).catch(reason => console.log(reason))\n  // }\n\n  showSideNavWithMain = ({ location, history }) => (\n      <main style={{ marginTop: 25 }}>\n        <Switch location={location}>\n          <Route exact path=\"/\" component={props => <MainViewRenderProps children={DashBoard} authProps={this.authProps()} />} />\n          <Route exact path=\"/projects/:id\" component={props => <MainViewRenderProps children={Projects} id={useParams().id} authProps={this.authProps()} />} />\n        </Switch>\n      </main>\n  )\n\n  render() {\n    let showDashboardLink = this.props.location.pathname.includes(\"projects\") ? true : false\n    return <>\n      <Navbar collapseOnSelect variant=\"dark\" style={{ backgroundColor: '#db3d44' }}>\n        <Navbar.Brand href=\"/to-do-app-frontend/\">\n          <i className=\"fa fa-fw fa-check-square-o\" style={{ fontSize: '1em' }} />\n          <span className='ml-2'>ToDo App</span>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        {\n        this.state.token ?\n          <>\n            <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\" style={{color: '#fff'}}>\n              <Nav>\n                {showDashboardLink ? <Link to=\"/\" style={{textDecoration: 'none', color: \"#fff\"}}><i className=\"fa fa-fw fa-home\" style={{ fontSize: '1em' }} /><strong>Dashboard</strong></Link> : null}\n                <span style={{marginLeft: 15}} onClick={() => this.logout()}><strong>Logout</strong><i className=\"fa fa-fw fa-sign-out\" style={{ fontSize: '1em', marginLeft: 5 }} /></span>\n              </Nav>\n            </Navbar.Collapse>\n          </>\n          : null\n        }\n      </Navbar>\n      {this.state.token !== null && this.state.token !== \"\" && this.state.token !== undefined && this.state.token !== \"undefined\" ? this.showSideNavWithMain(this.props) : <LoginPage parent={this} state={this.state} />}\n    </>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\n\nReactDOM.render(<Router basename=\"/\"><Route render={({ location, history }) => (<App location={location} history={history} />)} /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}